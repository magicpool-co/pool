name: Test + Build

on:
  push:
    branches:
      - prod
    paths-ignore:
      - "**/*.md"
  workflow_dispatch:

jobs:
  init:
    name: Set Variables
    runs-on: ubuntu-latest

    outputs:
      env: ${{ steps.setvars.outputs.env }}
      short_hash: ${{ steps.setvars.outputs.short_hash }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set variables
        id: setvars
        run: |
          if [[ "${{github.base_ref}}" == "dev" || "${{github.ref}}" == "refs/heads/dev" ]]; then
            echo "::set-output name=env::dev"
          fi

          if [[ "${{github.base_ref}}" == "prod" || "${{github.ref}}" == "refs/heads/prod" ]]; then
            echo "::set-output name=env::prod"
          fi

          echo "::set-output name=short_hash::$(git rev-parse --short HEAD)"

  test:
    name: Test
    needs: init
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19

      - name: Run Integration Tests
        run: make integration

  build:
    name: Build and Push
    needs: [init, test]
    runs-on: [self-hosted, linux, ARM64]
    strategy:
      matrix:
        app: [pool]
        region: [us-west-2, eu-central-1]
        chain: [kas]
        include:
          - region: eu-west-1
            app: worker
          - region: eu-west-1
            app: api
          - region: us-west-2
            app: api

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - uses: ./.github/workflows/build-push
        with:
          app: ${{ matrix.app }}
          chain: ${{ matrix.chain }}
          env: ${{ needs.init.outputs.env }}
          arch: arm64
          tag: ${{ needs.init.outputs.short_hash }}
          AWS_REGION: ${{ matrix.region }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
