syntax = "proto3";
package protowire;

option go_package = "github.com/kaspanet/kaspad/protowire";

import "rpc.proto";

message KaspadMessage {
  oneof payload {
    SubmitBlockRequestMessage submitBlockRequest = 1003;
    SubmitBlockResponseMessage submitBlockResponse = 1004;
    GetBlockTemplateRequestMessage getBlockTemplateRequest = 1005;
    GetBlockTemplateResponseMessage getBlockTemplateResponse = 1006;
    GetSelectedTipHashRequestMessage getSelectedTipHashRequest = 1012;
    GetSelectedTipHashResponseMessage getSelectedTipHashResponse = 1013;
    SubmitTransactionRequestMessage submitTransactionRequest = 1020;
    SubmitTransactionResponseMessage submitTransactionResponse = 1021;
    GetBlockRequestMessage getBlockRequest = 1025;
    GetBlockResponseMessage getBlockResponse = 1026;
    GetVirtualSelectedParentChainFromBlockRequestMessage getVirtualSelectedParentChainFromBlockRequest = 1029;
    GetVirtualSelectedParentChainFromBlockResponseMessage getVirtualSelectedParentChainFromBlockResponse = 1030;
    GetBlocksRequestMessage getBlocksRequest = 1031;
    GetBlocksResponseMessage getBlocksResponse = 1032;
    GetUtxosByAddressesRequestMessage getUtxosByAddressesRequest = 1052;
    GetUtxosByAddressesResponseMessage getUtxosByAddressesResponse = 1053;
    GetInfoRequestMessage getInfoRequest = 1063;
    GetInfoResponseMessage getInfoResponse = 1064;
    GetBalanceByAddressRequestMessage getBalanceByAddressRequest = 1077;
    GetBalanceByAddressResponseMessage getBalanceByAddressResponse = 1078;
    GetBalancesByAddressesRequestMessage getBalancesByAddressesRequest = 1079;
    GetBalancesByAddressesResponseMessage getBalancesByAddressesResponse = 1080;
  }
}

service RPC {
  rpc MessageStream (stream KaspadMessage) returns (stream KaspadMessage) {}
}